pattern matching with regular expression you may be familiar with searching for text by pressing ctrl and entering the word you re looking for regular expression go one step further  they allow you to specify pattern of text to search for  you may not know   business   exact phone number  but if you live in the united states or canada  you know it will be three digits  followed by   hyphen  and then four more digits  and optionally    three digit area code at the start   thi is how you  as   human  know   phone number when you see it is   phone number  but               is not we also recognize all sorts of other text patterns every day  email addresses have   symbols in the middle  us social security numbers have nine digits and two hyphens  website urls often have periods and forward slashes  news headlines use title case  social media hashtags begin with and contain no spaces  and more  chapter regular expressions are helpful  but few non programmers know about them even though most modern text editors and word processors  such a microsoft word or openof ce  have  nd and  nd and replace feature that can search based on regular expressions  regular expressions are huge time savers  not just for software users but also for programmers  in fact  tech writer cory doctorow argues that we should be teaching regular expressions even before programming knowing  regular expressions  can mean the difference between solving   problem in   steps and solving it in       steps  when you re   nerd  you forget that the problems you solve with   cou ple keystrokes can take other people days of tedious  error prone work to slog through in this chapter  you ll start by writing   program to  nd text pattern with out using regular expressions and then see how to use regular expressions to make the code much less bloated    ll show you basic matching with regular expressions and then move on to some more powerful features  such as string substitution and creating your own character classes  finally  at the end of the chapter  you ll write   program that can automatically extract phone number and email addresses from   block of text finding patterns of text without regular expression say you want to  nd an american phone number in   string  you know the pattern if you re american  three numbers    hyphen  three number hyphen  and four numbers  here   an example let   use   function named isphonenumber   to check whether   string matches this pattern  returning either true or false  open   new  le editor tab and enter the following code  then save the  le a isphonenumber py def isphonenumber text       if len text                return false    for   in range                if not text    isdecimal               return false     if text                   return false    for   in range                if not text    isdecimal               return false     if text                   return false    cory doctorow   here   what ict should really teach kids  how to do regular expression guardian december http   www theguardian com technology dec    ict teach kids regular expression pattern matching with regular expression  for   in range                 if not text    isdecimal               return false     return trueprint  is                phone number   print isphonenumber                 print  is moshi moshi   phone number   print isphonenumber  moshi moshi   when this program is run  the output looks like thi is                phone number trueis moshi moshi   phone number falsethe isphonenumber   function has code that does several checks to see whether the string in text is   valid phone number  if any of these check fail  the function return false  first the code checks that the string i exactly    character then it checks that the area code  that is  the rst three characters in text  consists of only numeric character the rest of the function checks that the string follows the pattern of   phone number  the number must have the  rst hyphen after the area code three more numeric character then another hyphen and  nally four more number if the program execution manages to get past all the checks  it return true  calling isphonenumber   with the argument will return true  calling isphonenumber   with moshi moshi  will return false  the  rst test fails because moshi moshi  is not    characters long if you wanted to  nd   phone number within   larger string  you would have to add even more code to  nd the phone number pattern  replace the last fmy print   function calls in isphonenumber py with the following message    call me at              tomorrow               is my office  for   in range len message        chunk   message             if isphonenumber chunk           print  phone number found      chunk print  done  when this program is run  the output will look like thi phone number found              phone number found              done chapter on each iteration of the for loop    new chunk of    characters from message is assigned to the variable chunk   for example  on the  rst itera tion is and chunk is assigned message        that is  the string call me at      on the next iteration is and chunk is assigned message        the string all me at       in other words  on each iteration of the for loop chunk takes on the following value call me at    all me at     ll me at        me at            and so on you pas chunk to isphonenumber   to see whether it matches the phone number pattern and if so  you print the chunk continue to loop through message  and eventually the    character in chunk will be   phone number  the loop goes through the entire string testing each    character piece and printing any chunk it  nds that satis e isphonenumber    once we re done going through message  we print done while the string in message is short in this example  it could be million of characters long and the program would still run in less than   second similar program that  nds phone numbers using regular expressions would also run in less than   second  but regular expressions make it quicker to write these program finding patterns of text with regular expression the previous phone number  nding program works  but it uses   lot of code to do something limited  the isphonenumber   function is    lines but can  nd only one pattern of phone numbers  what about   phone number formatted like              or                 what if the phone num ber had an extension  like                   the isphonenumber   function would fail to validate them  you could add yet more code for these addi tional patterns  but there is an easier way regular expressions  called regex for short  are descriptions for   pat tern of text  for example in   regex stands for   digit character that is  any single numeral from   to    the regex is used by python to match the same text pattern the previou isphonenumber   function did    string of three numbers    hyphen  three more number another hyphen  and four numbers  any other string would not match the regex but regular expressions can be much more sophisticated  for example adding in brace after   pattern is like saying   match this pattern three times   so the slightly shorter regex also matches the correct phone number format 